// <auto-generated />
using System;
using Konfigurator_aspnetcore_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KonfiguratoraspnetcoreBackend.Migrations
{
    [DbContext(typeof(LabyrinthKonfiguratorContext))]
    [Migration("20230119134312_addedHighscores")]
    partial class addedHighscores
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.BarrierDesign", b =>
                {
                    b.Property<string>("barrier")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("img")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("barrier");

                    b.ToTable("barrierDesigns");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.CharacterDesign", b =>
                {
                    b.Property<string>("character")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("img")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("character");

                    b.ToTable("characterDesigns");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.GameMap", b =>
                {
                    b.Property<int>("gameMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("barrier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("character")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("endPosX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("endPosY")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("sizeX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("sizeY")
                        .HasColumnType("INTEGER");

                    b.Property<int>("startPosX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("startPosY")
                        .HasColumnType("INTEGER");

                    b.Property<string>("target")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("tile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("gameMapId");

                    b.HasIndex("barrier");

                    b.HasIndex("character");

                    b.HasIndex("target");

                    b.HasIndex("tile");

                    b.HasIndex("username");

                    b.ToTable("gameMaps");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.Highscore", b =>
                {
                    b.Property<DateTime>("date")
                        .HasColumnType("TEXT");

                    b.Property<int>("gameMapId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.Property<int>("score")
                        .HasColumnType("INTEGER");

                    b.HasKey("date", "gameMapId", "username");

                    b.HasIndex("gameMapId");

                    b.HasIndex("username");

                    b.ToTable("highscores");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.ObstaclesInMap", b =>
                {
                    b.Property<int>("gameMapId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("x")
                        .HasColumnType("INTEGER");

                    b.Property<int>("y")
                        .HasColumnType("INTEGER");

                    b.HasKey("gameMapId", "x", "y");

                    b.ToTable("obstaclesInMaps");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.TargetDesign", b =>
                {
                    b.Property<string>("target")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("img")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("target");

                    b.ToTable("targetDesigns");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.TileDesign", b =>
                {
                    b.Property<string>("tile")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("img")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("tile");

                    b.ToTable("tileDesigns");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.User", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("username");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.GameMap", b =>
                {
                    b.HasOne("Konfigurator_aspnetcore_Backend.Models.BarrierDesign", "barrierDesign")
                        .WithMany("gameMaps")
                        .HasForeignKey("barrier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Konfigurator_aspnetcore_Backend.Models.CharacterDesign", "characterDesign")
                        .WithMany("gameMaps")
                        .HasForeignKey("character")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Konfigurator_aspnetcore_Backend.Models.TargetDesign", "targetDesign")
                        .WithMany("gameMaps")
                        .HasForeignKey("target")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Konfigurator_aspnetcore_Backend.Models.TileDesign", "tileDesign")
                        .WithMany("gameMaps")
                        .HasForeignKey("tile")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Konfigurator_aspnetcore_Backend.Models.User", "user")
                        .WithMany("gameMaps")
                        .HasForeignKey("username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("barrierDesign");

                    b.Navigation("characterDesign");

                    b.Navigation("targetDesign");

                    b.Navigation("tileDesign");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.Highscore", b =>
                {
                    b.HasOne("Konfigurator_aspnetcore_Backend.Models.GameMap", "gameMap")
                        .WithMany("highscores")
                        .HasForeignKey("gameMapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Konfigurator_aspnetcore_Backend.Models.User", "user")
                        .WithMany("highscores")
                        .HasForeignKey("username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gameMap");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.ObstaclesInMap", b =>
                {
                    b.HasOne("Konfigurator_aspnetcore_Backend.Models.GameMap", "gameMap")
                        .WithMany("obstaclesInMaps")
                        .HasForeignKey("gameMapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gameMap");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.BarrierDesign", b =>
                {
                    b.Navigation("gameMaps");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.CharacterDesign", b =>
                {
                    b.Navigation("gameMaps");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.GameMap", b =>
                {
                    b.Navigation("highscores");

                    b.Navigation("obstaclesInMaps");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.TargetDesign", b =>
                {
                    b.Navigation("gameMaps");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.TileDesign", b =>
                {
                    b.Navigation("gameMaps");
                });

            modelBuilder.Entity("Konfigurator_aspnetcore_Backend.Models.User", b =>
                {
                    b.Navigation("gameMaps");

                    b.Navigation("highscores");
                });
#pragma warning restore 612, 618
        }
    }
}
